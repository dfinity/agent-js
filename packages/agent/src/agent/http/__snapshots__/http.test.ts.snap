// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`error logs for bad signature should throw call errors if provided an invalid signature 1`] = `"{"message":"Error while making call: HTTP request failed:\\n  Status: 400 (Bad Request)\\n  Headers: [[0,[\\"access-control-allow-origin\\",\\"*\\"]],[1,[\\"content-length\\",\\"332\\"]],[2,[\\"content-type\\",\\"text/plain; charset=utf-8\\"]],[3,[\\"date\\",\\"Fri, 31 Jan 2025 18:53:47 GMT\\"]]]\\n  Body: Invalid signature: Invalid basic signature: Ed25519 signature could not be verified: public key 3b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29, signature 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, error: A signature was invalid\\n\\n","level":"error","error":{"name":"ProtocolError","cause":{"code":{"isCertified":false,"status":400,"statusText":"Bad Request","headers":[[0,["access-control-allow-origin","*"]],[1,["content-length","332"]],[2,["content-type","text/plain; charset=utf-8"]],[3,["date","Fri, 31 Jan 2025 18:53:47 GMT"]]],"bodyText":"Invalid signature: Invalid basic signature: Ed25519 signature could not be verified: public key 3b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29, signature 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, error: A signature was invalid\\n","name":"HttpErrorCode","requestContext":{"requestId":{},"senderPubKey":{},"senderSignature":{},"ingressExpiry":{"__expiry__":"1738362720000000000"}}},"kind":"Protocol"}}}"`;

exports[`error logs for bad signature should throw query errors for bad signature 1`] = `"{"message":"Error while making query: Failed to fetch HTTP request: TypeError: fetchResponse.text is not a function","level":"error","error":{"name":"TransportError","cause":{"code":{"isCertified":false,"error":{},"name":"HttpFetchErrorCode","requestContext":{"requestId":{},"senderPubKey":{},"senderSignature":{},"ingressExpiry":{"__expiry__":"1738362720000000000"}}},"kind":"Transport"}}}"`;

exports[`retry failures should succeed after multiple failures within the configured limit 1`] = `
{
  "requestDetails": undefined,
  "requestId": ArrayBuffer [],
  "response": {
    "body": null,
    "headers": [],
    "ok": true,
    "status": 200,
    "statusText": "success!",
  },
}
`;
