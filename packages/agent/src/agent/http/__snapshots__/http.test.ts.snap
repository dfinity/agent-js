// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`error logs for bad signature should throw call errors if provided an invalid signature 1`] = `"{"message":"Error while making call: HTTP request failed:\\n  Status: 400 (Bad Request)\\n  Headers: [[0,[\\"access-control-allow-origin\\",\\"*\\"]],[1,[\\"content-length\\",\\"332\\"]],[2,[\\"content-type\\",\\"text/plain; charset=utf-8\\"]],[3,[\\"date\\",\\"Fri, 31 Jan 2025 18:53:47 GMT\\"]]]\\n  Body: Invalid signature: Invalid basic signature: Ed25519 signature could not be verified: public key 3b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29, signature 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, error: A signature was invalid\\n\\n","level":"error","error":{"name":"ProtocolError","cause":{"code":{"isCertified":false,"requestContext":{"requestId":{"0":169,"1":32,"2":231,"3":46,"4":243,"5":122,"6":239,"7":250,"8":200,"9":250,"10":141,"11":141,"12":17,"13":168,"14":88,"15":134,"16":230,"17":254,"18":162,"19":73,"20":4,"21":70,"22":161,"23":155,"24":74,"25":98,"26":86,"27":140,"28":213,"29":26,"30":79,"31":112},"senderPubKey":{"0":48,"1":42,"2":48,"3":5,"4":6,"5":3,"6":43,"7":101,"8":112,"9":3,"10":33,"11":0,"12":59,"13":106,"14":39,"15":188,"16":206,"17":182,"18":164,"19":45,"20":98,"21":163,"22":168,"23":208,"24":42,"25":111,"26":13,"27":115,"28":101,"29":50,"30":21,"31":119,"32":29,"33":226,"34":67,"35":166,"36":58,"37":192,"38":72,"39":161,"40":139,"41":89,"42":218,"43":41},"senderSignature":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"ingressExpiry":{"__expiry__":"1738362720000000000"}},"status":400,"statusText":"Bad Request","headers":[[0,["access-control-allow-origin","*"]],[1,["content-length","332"]],[2,["content-type","text/plain; charset=utf-8"]],[3,["date","Fri, 31 Jan 2025 18:53:47 GMT"]]],"bodyText":"Invalid signature: Invalid basic signature: Ed25519 signature could not be verified: public key 3b6a27bcceb6a42d62a3a8d02a6f0d73653215771de243a63ac048a18b59da29, signature 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, error: A signature was invalid\\n","name":"HttpErrorCode"},"kind":"Protocol"}}}"`;

exports[`error logs for bad signature should throw query errors for bad signature 1`] = `"{"message":"Error while making query: Failed to fetch HTTP request: TypeError: fetchResponse.text is not a function","level":"error","error":{"name":"TransportError","cause":{"code":{"isCertified":false,"requestContext":{"requestId":{"0":60,"1":51,"2":231,"3":183,"4":128,"5":100,"6":0,"7":71,"8":77,"9":188,"10":35,"11":6,"12":226,"13":151,"14":216,"15":210,"16":101,"17":76,"18":233,"19":255,"20":104,"21":78,"22":181,"23":10,"24":199,"25":89,"26":169,"27":15,"28":0,"29":39,"30":84,"31":32},"senderPubKey":{"0":48,"1":42,"2":48,"3":5,"4":6,"5":3,"6":43,"7":101,"8":112,"9":3,"10":33,"11":0,"12":59,"13":106,"14":39,"15":188,"16":206,"17":182,"18":164,"19":45,"20":98,"21":163,"22":168,"23":208,"24":42,"25":111,"26":13,"27":115,"28":101,"29":50,"30":21,"31":119,"32":29,"33":226,"34":67,"35":166,"36":58,"37":192,"38":72,"39":161,"40":139,"41":89,"42":218,"43":41},"senderSignature":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"ingressExpiry":{"__expiry__":"1738362720000000000"}},"error":{},"name":"HttpFetchErrorCode"},"kind":"Transport"}}}"`;

exports[`retry failures should succeed after multiple failures within the configured limit 1`] = `
{
  "requestDetails": undefined,
  "requestId": ArrayBuffer [],
  "response": {
    "body": null,
    "headers": [],
    "ok": true,
    "status": 200,
    "statusText": "success!",
  },
}
`;
