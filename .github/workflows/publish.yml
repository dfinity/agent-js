name: Publish and Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  publish-packages:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Extract version from branch name
        run: |
          BRANCH="${{ github.event.pull_request.head.ref }}"
          VERSION="${BRANCH#release/}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "VERSION_TAG=v$VERSION" >> $GITHUB_ENV

      - name: Mark as Latest Release in GitHub Releases
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: |
          gh release edit "${{ env.VERSION_TAG }}" --draft=false --prerelease=false --latest=true

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main
        with:
          node_version_file: '.nvmrc'

      - run: pnpm build:packages

      - run: pnpm publish:packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-docs:
    needs: publish-packages
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: generate_token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: icp-js-sdk-docs

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main
        with:
          node_version_file: '.nvmrc'

      - uses: dfinity/ci-tools/actions/extract-version@main
        id: extract-version
        with:
          file: 'package.json'

      - name: Prepare version
        id: ver
        run: |
          echo "major_minor_version=v${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}" >> $GITHUB_OUTPUT
          echo "major_minor_patch_version=v${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}.${{ steps.extract-version.outputs.patch }}" >> $GITHUB_OUTPUT

      - name: Build docs for version ${{ steps.ver.outputs.major_minor_version }}
        working-directory: docs
        env:
          DOCS_VERSION: ${{ steps.ver.outputs.major_minor_version }}
          DOCS_VERSIONS_DROPDOWN_TITLE_VERSION: ${{ steps.ver.outputs.major_minor_patch_version }}
        run: pnpm build --outDir dist/${{ steps.ver.outputs.major_minor_version }}

      - name: Build docs for version latest
        working-directory: docs
        env:
          DOCS_VERSION: latest
          DOCS_VERSIONS_DROPDOWN_TITLE_VERSION: ${{ steps.ver.outputs.major_minor_patch_version }}
        run: pnpm build --outDir dist/latest

      - name: Checkout icp-pages branch
        uses: actions/checkout@v4
        with:
          ref: icp-pages
          path: icp-pages

      - name: Assemble docs
        uses: dfinity/ci-tools/actions/assemble-docs@main
        with:
          assets_dir: 'docs/dist/${{ steps.ver.outputs.major_minor_version }}'
          version: ${{ steps.ver.outputs.major_minor_version }}
          target_dir: 'icp-pages'
          version_label: ${{ steps.ver.outputs.major_minor_version }}

      - name: Assemble docs
        uses: dfinity/ci-tools/actions/assemble-docs@main
        with:
          assets_dir: 'docs/dist/latest'
          version: 'latest'
          target_dir: 'icp-pages'
          version_label: 'Latest (${{ steps.ver.outputs.major_minor_patch_version }})'

      - name: Submit Documentation
        uses: dfinity/ci-tools/actions/submit-docs@main
        with:
          destination_repo: 'dfinity/icp-js-sdk-docs'
          token: ${{ steps.generate_token.outputs.token }}
          target_dir: 'icp-pages'
