name: Publish and Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

concurrency:
  group: pr-${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  publish:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from branch name
        run: |
          BRANCH="${{ github.event.pull_request.head.ref }}"
          VERSION="${BRANCH#release/}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "VERSION_TAG=v$VERSION" >> $GITHUB_ENV
      - name: Mark as Latest Release in GitHub Releases
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        run: |
          gh release edit "${{ env.VERSION_TAG }}" --draft=false --prerelease=false --latest=true

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main
        with:
          node_version_file: '.nvmrc'
          
      - run: pnpm build
      - run: pnpm audit
      - run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # publish docs
      - name: Install dfx
        run: dfinity/setup-dfx@main
      - name: Add new identity to dfx
        run: |
          echo ${{ secrets.DFX_IDENTITY_PEM }} > identity.pem
          dfx identity import docs-deployer identity.pem
          dfx identity use docs-deployer
      - name: Deploy docs
        run: dfx deploy --network ic

      - name: Delete release branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin --delete ${{ env.BRANCH }}
