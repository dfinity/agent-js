name: Node.js CI

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        ghc: ['8.8.4']
        spec:
          - release-0.15
          # Spec: Add module hash and controller to state tree (#276)
          - c23cce1b982eff77dd285d7ce63209edb8a96b85
          # ic-ref: Cache the module hash (#289)
          - 147c64d94ff6350a63e58df9690e5144bfe04045
          # Clarify and test availability of certification APIs (#286)
          - 061abbd96edfcea6e9897e3dc5afdeb5d684e197
          #  Backport ingress filtering and secp256k1` 
          - 7381b702eaca27c21b2323c77abbf5956ef556f7
          #  ic-ref(-test): Implement and test canister_inspect_message (#287)
          - a5c34a30bac688af2585ce7d6a9e893e8598c718
          #  ic-ref: Support for secp256k1 (#267)
          - 3a9dd6a2f9c0ed93283bd6d3ab6f027f036e3152
          #  Fix more merge mistakes
          - a4b893d04a38e833365b5d83e015e98ba179935c
        node:
          - 12
          - 14

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - run: npx lerna bootstrap
    - run: npx lerna run lint

    # build monorepo incl. each subpackage
    - run: npx lerna run build

    # test monorepo incl. each subpackage
    - run: npx lerna run test
      env:
        CI: true

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - run: pip3 install mitmproxy~=6.0.2

    # IC ref checkout and build.
    - uses: actions/checkout@v2
      with:
        repository: 'dfinity-lab/ic-ref'
        # Personal Read-only Access Token created by hans.larsen@dfinity.org
        token: ${{ secrets.IC_REF_TOKEN }}
        path: ic-ref
        ref: ${{ matrix.spec }}

    - name: Cache ~/.cabal/store
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-store

    - uses: actions/setup-haskell@v1.1.3
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: '3.2'

    - name: Cargo cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build ic-ref
      run: |
        ls -l /opt/ghc/
        export PATH=/opt/ghc/bin:$PATH
        cabal --version
        ghc-${{ matrix.ghc }} --version
        mkdir -p $HOME/bin
        cd ic-ref/impl
        cabal update
        cabal install -w ghc-${{ matrix.ghc }} --overwrite-policy=always  --installdir=$HOME/bin

    - name: Running ic-ref
      id: ic_ref
      run: |
        set -ex
        $HOME/bin/ic-ref --pick-port --write-port-to $HOME/ic_ref_port &
        sleep 1
        echo "::set-output name=IC_REF_PORT::$(cat $HOME/ic_ref_port)"

    - name: Running mitmdump
      id: mitmdump
      run: |
        set -ex
        mitmdump -p 8888 --mode reverse:http://localhost:${{ steps.ic_ref.outputs.IC_REF_PORT }} \
           --modify-body '/~s/Hello/Hullo' \
           --modify-headers '/~s/Transfer-Encoding/' \
           &
        sleep 1

    - run: npx lerna run e2e
      env:
        CI: true
        IC_REF_PORT: ${{ steps.ic_ref.outputs.IC_REF_PORT }}

    - name: mitm e2e
      env:
        CI: true
        IC_REF_PORT: 8888
        MITM: true
      run: npx lerna run mitm

    - name: clean up
      run: |
        killall mitmdump
        killall ic-ref
