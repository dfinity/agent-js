name: Node.js CI

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
        ghc: ['8.8.4']
        spec: ['release-0.12']
        node: [10, 12, 14]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    # IC ref checkout and build.
    - uses: actions/checkout@v2
      with:
        repository: 'dfinity-lab/ic-ref'
        # Personal Read-only Access Token created by hans.larsen@dfinity.org
        token: ${{ secrets.IC_REF_TOKEN }}
        path: ic-ref
        ref: ${{ matrix.spec }}

    - name: Cache ~/.cabal/store
      uses: actions/cache@v2
      with:
        path: |
          ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-store

    - uses: actions/setup-haskell@v1.1
      with:
        ghc-version: ${{ matrix.ghc }}

    - name: Cargo cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build ic-ref
      run: |
        ls -l /opt/ghc/
        export PATH=/opt/ghc/bin:$PATH
        cabal --version
        ghc-${{ matrix.ghc }} --version
        mkdir -p $HOME/bin
        cd ic-ref/impl
        cabal update
        cabal install -w ghc-${{ matrix.ghc }} --overwrite-policy=always  --installdir=$HOME/bin

    - name: Running ic-ref
      id: ic_ref
      run: |
        set -ex
        $HOME/bin/ic-ref --pick-port --write-port-to $HOME/ic_ref_port &
        sleep 1
        echo "::set-output name=IC_REF_PORT::$(cat $HOME/ic_ref_port)"

    - run: npx lerna bootstrap
    - run: npx lerna run ci
      env:
        CI: true
        IC_REF_PORT: ${{ steps.ic_ref.outputs.IC_REF_PORT }}
    - run: killall ic-ref
